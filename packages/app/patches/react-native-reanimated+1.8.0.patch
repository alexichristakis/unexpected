diff --git a/node_modules/react-native-reanimated/react-native-reanimated.d.ts b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
index 3e00e35..15e784e 100644
--- a/node_modules/react-native-reanimated/react-native-reanimated.d.ts
+++ b/node_modules/react-native-reanimated/react-native-reanimated.d.ts
@@ -147,7 +147,7 @@ declare module 'react-native-reanimated' {
 
     export const SpringUtils: SpringUtils
 
-    export type TransformStyleTypes = TransformsStyle['transform'] extends readonly (infer T)[] ? T : never
+    export type TransformStyleTypes = TransformsStyle['transform'] extends (readonly (infer T)[] | undefined) ? T : never
     export type AdaptTransforms<T> = { [P in keyof T]: Animated.Adaptable<T[P]> }
     export type AnimatedTransform = (AdaptTransforms<TransformStyleTypes>)[]
 
@@ -198,7 +198,32 @@ declare module 'react-native-reanimated' {
       getNode(): ReactNativeScrollView;
     }
     export class Code extends Component<CodeProps> {}
-    export function createAnimatedComponent<T>(component: T): T;
+    export type ComponentProps<T> = T extends React.ComponentType<infer P> | React.Component<infer P> ? P : never
+
+    export interface WithAnimatedValue<T>
+     extends ThisType<
+       T extends object
+         ? { [K in keyof T]?: WithAnimatedValue<T[K]> }
+         : T extends (infer P)[]
+         ? WithAnimatedValue<P>[]
+         : T | Value | AnimatedInterpolation
+       > {}
+
+    export type AnimatedProps<T> = { [key in keyof T]: WithAnimatedValue<T[key]> }
+
+    export interface AnimatedComponent<
+     T extends React.ComponentType<ComponentProps<T>> | React.Component<ComponentProps<T>>
+     > extends React.FC<AnimatedProps<ComponentProps<T>>> {
+     getNode: () => T
+   }
+
+    /**
+    * Make any React component Animatable.  Used to create `Animated.View`, etc.
+    */
+   export function createAnimatedComponent<
+     T extends React.ComponentType<ComponentProps<T>> | React.Component<ComponentProps<T>>
+     >(component: T): AnimatedComponent<T extends React.ComponentClass<ComponentProps<T>> ? InstanceType<T> : T>
+
 
     // classes
     export {
